import pygame
from settings import *


class Grid(object):
    def __init__(self):
        self.square = (pygame.image.load(f"images/red_square.png").convert_alpha())

        self.grid = [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],  # [y.position][x.position]
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "n"],
                     ["n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n"]]

        self.grid_doubles = []

    def draw_grid(self):
        self.grid_doubles = []
        for horizontal_number in range(len(self.grid) - 1):
            for vertical_number in range(len(self.grid[horizontal_number]) - 1):
                if self.grid[horizontal_number][vertical_number] == "1":
                    self.grid_doubles.append([vertical_number, horizontal_number])

        return self.grid_doubles

